{"version":3,"file":"BookingWidget.jsx","sourceRoot":"","sources":["BookingWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from \"@/components/ui/card\";\nimport { db } from '@/lib/firebase/config';\nimport { collection, query, where, getDocs, addDoc } from 'firebase/firestore';\nimport type { Service, Staff, ServiceCategory } from '@/types/booking';\nimport DateStaffSelection from './DateStaffSelection';\nimport ClientForm from './ClientForm'; // Ajout de l'import\nimport { useRouter } from 'next/navigation';\nimport { \n  ChevronLeft\n} from 'lucide-react';\n\ninterface BookingWidgetProps {\n  businessId: string;\n}\n\nexport default function BookingWidget({ businessId }: BookingWidgetProps) {\n  const [step, setStep] = useState(1);\n  const [services, setServices] = useState<Service[]>([]);\n  const [selectedService, setSelectedService] = useState<Service | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedDateTime, setSelectedDateTime] = useState<Date | null>(null);\n  const [selectedStaffMember, setSelectedStaffMember] = useState<Staff | null>(null);\n  const [staffList, setStaffList] = useState<Staff[]>([]);\n  const router = useRouter();\n  const [serviceCategories, setServiceCategories] = useState<ServiceCategory[]>([]);\n\n\n\n  const formatDuration = (duration: { hours: number; minutes: number }) => {\n    const parts = [];\n    if (duration.hours > 0) {\n      parts.push(`${duration.hours}h`);\n    }\n    if (duration.minutes > 0) {\n      parts.push(`${duration.minutes}min`);\n    }\n    return parts.join(' ');\n  };\n\n  const handleServiceSelect = (service: Service) => {\n    setSelectedService(service);\n    // Réinitialiser l'état lors du passage à l'étape 2\n    setStep(2);\n  };\n  \n\n\n  useEffect(() => {\n    const fetchBusinessData = async () => {\n      try {\n        setLoading(true);\n        \n        // Charger les services, les catégories et les collaborateurs en parallèle\n        const [servicesSnapshot, categoriesSnapshot, staffSnapshot] = await Promise.all([\n          getDocs(query(collection(db, 'services'), where('businessId', '==', businessId))),\n          getDocs(query(collection(db, 'serviceCategories'), where('businessId', '==', businessId))),\n          getDocs(query(collection(db, 'staff'), where('businessId', '==', businessId)))\n        ]);\n        \n        if (servicesSnapshot.empty) {\n          setError('Business non trouvé ou aucun service disponible');\n          return;\n        }\n  \n        const servicesData = servicesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Service[];\n  \n        const categoriesData = (categoriesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as ServiceCategory[]).sort((a, b) => a.order - b.order);\n        \n  \n        const staffData = staffSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Staff[];\n  \n        setServices(servicesData);\n        setServiceCategories(categoriesData);\n        setStaffList(staffData);\n        setError(null);\n      } catch (err) {\n        console.error('Erreur lors du chargement des données:', err);\n        setError('Erreur lors du chargement des données');\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    if (businessId) {\n      fetchBusinessData();\n    }\n  }, [businessId]);\n  \n\n  if (loading) {\n    return (\n      <Card className=\"w-full max-w-3xl mx-auto p-4\">\n        <div className=\"text-center\">Chargement...</div>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className=\"w-full max-w-3xl mx-auto p-4\">\n        <div className=\"text-red-500 text-center\">{error}</div>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"w-full max-w-3xl mx-auto\">\n      <div className=\"flex justify-between px-6 py-4 border-b\">\n    {[1, 2, 3].map((number) => (\n      <div \n        key={number} \n        className=\"flex flex-col items-center gap-2\"\n      >\n        <div className={`\n          w-8 h-8 rounded flex items-center justify-center\n          text-sm transition-all duration-300\n          ${step >= number \n            ? 'bg-black text-white' \n            : 'bg-gray-50 text-gray-400'\n          }\n        `}>\n          {number}\n        </div>\n        <span className={`\n          text-xs\n          ${step >= number ? 'text-gray-700' : 'text-gray-400'}\n        `}>\n          {number === 1 ? 'Service' : number === 2 ? 'Date' : 'Informations'}\n        </span>\n      </div>\n    ))}\n  </div>\n\n      <div className=\"p-4\">\n      {step === 1 && (\n  <div className=\"space-y-8\">\n    {/* En-tête principal */}\n    <div className=\"space-y-2\">\n      <h2 className=\"text-xl font-medium\">Sélectionner un service</h2>\n      <p className=\"text-sm text-gray-500\">Choisissez le service que vous souhaitez réserver</p>\n    </div>\n    \n    {/* Sections de services */}\n    <div className=\"space-y-8\">\n      {serviceCategories.map((category) => (\n        <div key={category.id} className=\"space-y-4\">\n          {/* Titre de catégorie */}\n          <h3 className=\"text-base font-medium\">\n            {category.title}\n          </h3>\n          \n          {/* Liste des services de la catégorie */}\n          <div className=\"space-y-3\">\n            {services\n              .filter(service => service.categoryId === category.id)\n              .map((service) => (\n                <div\n                  key={service.id}\n                  onClick={() => handleServiceSelect(service)}\n                  className={`\n                    p-4 rounded-md border cursor-pointer\n                    transition-all duration-200\n                    ${selectedService?.id === service.id \n                      ? 'border-black bg-gray-50' \n                      : 'border-gray-200 hover:border-gray-300'\n                    }\n                  `}\n                >\n                  <div className=\"flex justify-between items-start gap-4\">\n                    <div className=\"space-y-1.5\">\n                      <h4 className=\"font-medium text-base\">{service.title}</h4>\n                      <p className=\"text-sm text-gray-500\">{service.description}</p>\n                    </div>\n                    <div className=\"text-right shrink-0\">\n                      <p className=\"font-medium text-base\">{service.price}€</p>\n                      <p className=\"text-sm text-gray-500\">\n\n                        {formatDuration(service.duration)}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n)}\n  \n        {step === 2 && (\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-semibold\">Choisir la date et l'heure</h2>\n              <button \n  onClick={() => setStep(1)}\n  className=\"text-sm text-gray-500 hover:text-black transition-colors duration-200 flex items-center gap-1\"\n>\n  <ChevronLeft className=\"w-4 h-4\" />\n  Modifier le service\n</button>\n            </div>\n            <DateStaffSelection\n              key={`date-staff-${selectedService?.id}`}\n              businessId={businessId}\n              serviceId={selectedService?.id || ''}\n              serviceDuration={selectedService?.duration || { hours: 0, minutes: 0 }}\n              selectedService={selectedService}\n              onSelect={(datetime, staffId) => {\n                setSelectedDateTime(datetime);\n                const staffMember = staffId \n                  ? staffList.find(s => s.id === staffId) || null \n                  : null;\n                setSelectedStaffMember(staffMember);\n                setStep(3);\n              }}\n            />\n          </div>\n        )}\n  \n  {step === 3 && selectedService && selectedDateTime && selectedStaffMember && (\n  <div className=\"space-y-4\">\n    <div className=\"flex justify-between items-center\">\n      <h2 className=\"text-xl font-semibold\">Vos informations</h2>\n      <button \n        onClick={() => setStep(2)}\n        className=\"text-sm text-gray-500 hover:text-black transition-colors duration-200 flex items-center gap-1\"\n      >\n        <ChevronLeft className=\"w-4 h-4\" />\n        Modifier la date\n      </button>\n    </div>\n    <ClientForm\n      service={selectedService}\n      dateTime={selectedDateTime}\n      staff={selectedStaffMember}\n      onSubmit={async (clientData) => {\n        try {\n          const endDateTime = new Date(selectedDateTime);\n          endDateTime.setHours(\n            endDateTime.getHours() + selectedService.duration.hours,\n            endDateTime.getMinutes() + selectedService.duration.minutes\n          );\n      \n          const appointmentData = {\n            businessId: businessId,\n            staffId: selectedStaffMember.id,    // Référence au staff\n            serviceId: selectedService.id,       // Référence au service\n            clientName: `${clientData.firstName} ${clientData.lastName}`,\n            clientEmail: clientData.email,\n            clientPhone: clientData.phone,\n            start: selectedDateTime,\n            end: endDateTime,\n            status: 'confirmed',\n            createdAt: new Date(),\n            notes: ''\n          };\n      \n          const docRef = await addDoc(collection(db, 'appointments'), appointmentData);\n          router.push(`/confirmation/${docRef.id}`);\n          \n        } catch (error) {\n          console.error('Erreur lors de la création du rendez-vous:', error);\n        }\n      }}\n              onBack={() => setStep(2)}\n            />\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}"]}
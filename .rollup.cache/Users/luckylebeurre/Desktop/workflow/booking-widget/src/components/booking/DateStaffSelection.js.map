{"version":3,"file":"DateStaffSelection.js","sourceRoot":"","sources":["DateStaffSelection.tsx"],"names":[],"mappings":"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","sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { db } from '@/lib/firebase/config';\nimport { collection, query, where, getDocs, doc, getDoc } from 'firebase/firestore';\nimport { format, addDays, startOfWeek, differenceInWeeks } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport type { Service } from '@/types/booking';\n\ninterface Staff {\n  id: string;\n  firstName: string;\n  lastName: string;\n  businessId: string;\n}\n\ninterface TimeSlot {\n  time: string;\n  availableStaff: Staff[];\n}\n\ninterface DateStaffSelectionProps {\n  businessId: string;\n  serviceId: string;\n  serviceDuration: { hours: number; minutes: number };\n  selectedService: Service | null;\n  onSelect: (datetime: Date, staffId?: string) => void;\n}\n\ninterface BusinessHours {\n  hours: {\n    [key: string]: {\n      isOpen: boolean;\n      openTime: string;\n      closeTime: string;\n    };\n  };\n}\n\ninterface StaffHours {\n  hours: {\n    [key: string]: {\n      isOpen: boolean;\n      openTime: string;\n      closeTime: string;\n    };\n  };\n}\n\nconst isPastTime = (date: Date, time: string): boolean => {\n  const now = new Date();\n  const [hours, minutes] = time.split(':').map(Number);\n  const timeDate = new Date(date);\n  timeDate.setHours(hours, minutes, 0, 0);\n  return timeDate < now;\n};\n\nconst hasAvailableSlotsInWeek = (slots: { [key: string]: TimeSlot[] }): boolean => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  \n  return Object.entries(slots).some(([dateStr, daySlots]) => {\n    const slotDate = new Date(dateStr);\n    // Ne vérifier que les créneaux à partir d'aujourd'hui\n    return slotDate >= today && daySlots.length > 0;\n  });\n};\n\nexport default function DateStaffSelection({ \n  businessId, \n  serviceId,\n  serviceDuration,\n  selectedService,\n  onSelect \n}: DateStaffSelectionProps) {\n  const isInitialized = useRef(false);\n  const [staff, setStaff] = useState<Staff[]>([]);\n  const [selectedStaff, setSelectedStaff] = useState<Staff | null>(null);\n  const [weekStart, setWeekStart] = useState(() => {\n    const today = new Date();\n    return startOfWeek(today, { weekStartsOn: 1 });\n  });\n  const [availableSlots, setAvailableSlots] = useState<{ [key: string]: TimeSlot[] }>({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [appointments, setAppointments] = useState<any[]>([]);\n  const [businessHours, setBusinessHours] = useState<BusinessHours | null>(null);\n  const [staffHoursMap, setStaffHoursMap] = useState<{ [key: string]: StaffHours }>({});\n\n  const weekDays = [...Array(7)].map((_, index) => addDays(weekStart, index));\n\n  const formatDuration = (duration: { hours: number; minutes: number }) => {\n    const parts = [];\n    if (duration.hours > 0) {\n      parts.push(`${duration.hours}h`);\n    }\n    if (duration.minutes > 0) {\n      parts.push(`${duration.minutes}min`);\n    }\n    return parts.join(' ');\n  };\n\n  // Effet pour le chargement initial des données\n  useEffect(() => {\n    const loadData = async () => {\n      if (!businessId) return;\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Chargement parallèle des données avec gestion d'erreur appropriée\n        const [staffResponse, businessHoursDoc, appointmentsResponse] = await Promise.all([\n          getDocs(query(collection(db, 'staff'), where('businessId', '==', businessId))),\n          getDoc(doc(db, 'businessHours', businessId)),\n          getDocs(query(collection(db, 'appointments'), where('businessId', '==', businessId)))\n        ]).catch(error => {\n          throw new Error(`Erreur lors du chargement des données: ${error.message}`);\n        });\n\n        const staffData = staffResponse.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })) as Staff[];\n\n        if (staffData.length === 0) {\n          throw new Error('Aucun personnel disponible');\n        }\n\n        const businessHoursData = businessHoursDoc.exists() ? businessHoursDoc.data() as BusinessHours : null;\n        if (!businessHoursData) {\n          throw new Error('Horaires non configurés');\n        }\n\n        setStaff(staffData);\n        setBusinessHours(businessHoursData);\n        setAppointments(appointmentsResponse.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        })));\n\n        // Chargement des horaires du personnel\n        const hoursMap: { [key: string]: StaffHours } = {};\n        await Promise.all(\n          staffData.map(async (staffMember) => {\n            const staffHoursDoc = await getDoc(doc(db, 'staffHours', staffMember.id));\n            if (staffHoursDoc.exists()) {\n              hoursMap[staffMember.id] = staffHoursDoc.data() as StaffHours;\n            }\n          })\n        );\n        setStaffHoursMap(hoursMap);\n        setSelectedStaff(null);\n        isInitialized.current = true;\n\n      } catch (error) {\n        console.error('Erreur:', error);\n        setError(error instanceof Error ? error.message : 'Une erreur est survenue');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [businessId]);\n\n  const checkTimeSlotAvailability = (\n    currentTime: Date,\n    slotEndTime: Date,\n    staffToCheck: Staff[],\n    date: Date\n  ): Staff[] => {\n    const dateStr = format(date, 'yyyy-MM-dd');\n    \n    return staffToCheck.filter(staffMember => {\n      const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n      const dayName = days[date.getDay()];\n\n      const staffHours = staffHoursMap[staffMember.id]?.hours?.[dayName];\n      if (!staffHours?.isOpen) return false;\n\n      const [openHour, openMinute] = staffHours.openTime.split(':').map(Number);\n      const [closeHour, closeMinute] = staffHours.closeTime.split(':').map(Number);\n      const staffStartTime = new Date(date);\n      staffStartTime.setHours(openHour, openMinute, 0, 0);\n      const staffEndTime = new Date(date);\n      staffEndTime.setHours(closeHour, closeMinute, 0, 0);\n\n      if (currentTime < staffStartTime || slotEndTime > staffEndTime) {\n        return false;\n      }\n\n      const staffAppointments = appointments.filter(apt => \n        apt.staffId === staffMember.id &&\n        apt.status !== 'cancelled' &&\n        format(apt.start.toDate(), 'yyyy-MM-dd') === dateStr\n      );\n\n      return !staffAppointments.some(apt => {\n        const appointmentStart = apt.start.toDate();\n        const appointmentEnd = apt.end.toDate();\n        return (currentTime < appointmentEnd && slotEndTime > appointmentStart);\n      });\n    });\n  };\n\n  const fetchDaySlots = async (date: Date) => {\n    if (!businessHours || !staff.length) return [];\n\n    const days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    const dayName = days[date.getDay()];\n    const businessDay = businessHours.hours[dayName];\n\n    if (!businessDay?.isOpen) return [];\n\n    const slots: TimeSlot[] = [];\n    const [openHour, openMinute] = businessDay.openTime.split(':').map(Number);\n    const [closeHour, closeMinute] = businessDay.closeTime.split(':').map(Number);\n    const serviceDurationMinutes = (serviceDuration?.hours || 0) * 60 + (serviceDuration?.minutes || 0);\n\n    let currentTime = new Date(date);\n    currentTime.setHours(openHour, openMinute, 0, 0);\n    const endTime = new Date(date);\n    endTime.setHours(closeHour, closeMinute, 0, 0);\n\n    while (currentTime <= endTime) {\n      const slotEndTime = new Date(currentTime);\n      slotEndTime.setMinutes(slotEndTime.getMinutes() + serviceDurationMinutes);\n      \n      if (slotEndTime > endTime) break;\n\n      const timeString = format(currentTime, 'HH:mm');\n      \n      if (!isPastTime(date, timeString)) {\n        const availableStaffForSlot = selectedStaff \n          ? checkTimeSlotAvailability(currentTime, slotEndTime, [selectedStaff], date)\n          : checkTimeSlotAvailability(currentTime, slotEndTime, staff, date);\n\n        if (availableStaffForSlot.length > 0) {\n          slots.push({\n            time: timeString,\n            availableStaff: availableStaffForSlot\n          });\n        }\n      }\n\n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n\n    return slots;\n  };\n\n  const fetchAvailability = async (startDate: Date) => {\n    if (!businessHours || !staff.length) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      let currentWeekStart = startDate;\n      let slotsFound = false;\n      let weeksChecked = 0;\n  \n      do {\n        const slots: { [key: string]: TimeSlot[] } = {};\n        \n        // On utilise currentWeekStart pour la recherche\n        for (const day of [...Array(7)].map((_, index) => addDays(currentWeekStart, index))) {\n          const dayStr = format(day, 'yyyy-MM-dd');\n          slots[dayStr] = await fetchDaySlots(day);\n        }\n  \n        if (hasAvailableSlotsInWeek(slots)) {\n          setAvailableSlots(slots);\n          setWeekStart(currentWeekStart);\n          slotsFound = true;\n          break;\n        }\n  \n        // Seulement avancer à la semaine suivante si on n'a pas trouvé de créneaux\n        currentWeekStart = addDays(currentWeekStart, 7);\n        weeksChecked++;\n      } while (!slotsFound && weeksChecked < 8);\n  \n      if (!slotsFound) {\n        setAvailableSlots({});\n        setError('Aucune disponibilité trouvée dans les 8 prochaines semaines');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des disponibilités:', error);\n      setError('Erreur lors du chargement des disponibilités');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n\n  // Effet unifié pour la mise à jour des disponibilités\n  useEffect(() => {\n    if (!businessHours || !staff.length || !isInitialized.current) return;\n    fetchAvailability(weekStart);\n  }, [\n    weekStart,\n    selectedStaff,\n    businessHours,\n    staff,\n    serviceDuration,\n    appointments,\n    staffHoursMap\n  ]);\n\n  const handleTimeSelect = (date: Date, slot: TimeSlot) => {\n    if (!slot.availableStaff.length) return;\n\n    const [hours, minutes] = slot.time.split(':').map(Number);\n    const selectedDate = new Date(date);\n    selectedDate.setHours(hours, minutes, 0, 0);\n\n    if (selectedStaff) {\n      onSelect(selectedDate, selectedStaff.id);\n    } else {\n      const randomStaff = slot.availableStaff[Math.floor(Math.random() * slot.availableStaff.length)];\n      onSelect(selectedDate, randomStaff.id);\n    }\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n  {/* En-tête avec résumé du service */}\n  <div className=\"bg-gray-50 p-4 rounded-md space-y-4\">\n    <div className=\"flex justify-between items-center\">\n      <div>\n        <h3 className=\"font-medium text-base\">{selectedService?.title}</h3>\n        <p className=\"text-sm text-gray-500\">\n          {formatDuration(serviceDuration)} - {selectedService?.price}€\n        </p>\n      </div>\n      <div>\n        <Select \n          defaultValue=\"no_preference\"\n          value={selectedStaff?.id || \"no_preference\"}\n          onValueChange={(value) => {\n            if (value === \"no_preference\") {\n              setSelectedStaff(null);\n            } else {\n              const selected = staff.find(s => s.id === value);\n              setSelectedStaff(selected || null);\n            }\n          }}\n        >\n          <SelectTrigger className=\"w-48 border-gray-200 hover:border-gray-300 transition-colors\">\n            <SelectValue placeholder=\"Avec qui ?\">\n              {selectedStaff ? `${selectedStaff.firstName} ${selectedStaff.lastName}` : \"Avec qui ?\"}\n            </SelectValue>\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"no_preference\" className=\"text-gray-500\">Sans préférence</SelectItem>\n            {staff.map((member) => (\n              <SelectItem key={member.id} value={member.id}>\n                {member.firstName} {member.lastName}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      </div>\n    </div>\n  </div>\n\n  {/* Calendrier */}\n  <div className=\"border rounded-md\">\n    <div className=\"grid grid-cols-7 border-b\">\n      {weekDays.map((day) => (\n        <div key={day.toISOString()} className=\"p-3 text-center border-r last:border-r-0\">\n          <div className=\"font-medium text-sm\">\n            {format(day, 'EEEE', { locale: fr })}\n          </div>\n          <div className=\"text-sm text-gray-500\">\n            {format(day, 'd', { locale: fr })}\n            <span className=\"ml-1\">\n              {format(day, 'MMM', { locale: fr })}\n            </span>\n          </div>\n        </div>\n      ))}\n    </div>\n\n    {/* Navigation */}\n    <div className=\"flex justify-between p-2 border-b bg-gray-50\">\n      <button\n        onClick={() => setWeekStart(addDays(weekStart, -7))}\n        className=\"p-1.5 rounded-md hover:bg-gray-100 transition-colors\"\n      >\n        <ChevronLeft className=\"w-4 h-4\" />\n      </button>\n      <button\n        onClick={() => setWeekStart(addDays(weekStart, 7))}\n        className=\"p-1.5 rounded-md hover:bg-gray-100 transition-colors\"\n      >\n        <ChevronRight className=\"w-4 h-4\" />\n      </button>\n    </div>\n\n    {/* Grille des horaires */}\n    <div className=\"grid grid-cols-7\">\n      {weekDays.map((day) => {\n        const dayStr = format(day, 'yyyy-MM-dd');\n        const slots = availableSlots[dayStr] || [];\n\n        return (\n          <div key={dayStr} className=\"min-h-[400px] p-2 border-r last:border-r-0\">\n            {slots.map((slot) => (\n              <button\n                key={slot.time}\n                className={`\n                  w-full py-2 px-3 mb-2 text-sm rounded-md\n                  transition-all duration-200 font-medium\n                  ${selectedStaff \n                    ? slot.availableStaff.some(s => s.id === selectedStaff.id)\n                      ? 'hover:bg-black hover:text-white bg-white border border-gray-200'\n                      : 'text-gray-400 bg-gray-50 cursor-not-allowed'\n                    : slot.availableStaff.length > 0\n                      ? 'hover:bg-black hover:text-white bg-white border border-gray-200'\n                      : 'text-gray-400 bg-gray-50 cursor-not-allowed'\n                  }\n                `}\n                disabled={selectedStaff \n                  ? !slot.availableStaff.some(s => s.id === selectedStaff.id)\n                  : slot.availableStaff.length === 0\n                }\n                onClick={() => handleTimeSelect(day, slot)}\n              >\n                {slot.time}\n              </button>\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  </div>\n\n  {loading && (\n    <div className=\"text-center text-gray-500\">\n      Chargement des disponibilités...\n    </div>\n  )}\n\n  {!loading && Object.values(availableSlots).every(slots => slots.length === 0) && (\n    <div className=\"text-center text-gray-500 p-4\">\n      Aucun créneau disponible dans les 8 prochaines semaines.\n      Veuillez nous contacter directement pour plus d'informations.\n    </div>\n  )}\n</div>\n  );\n\n}"]}